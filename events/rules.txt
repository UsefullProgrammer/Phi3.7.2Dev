namespace = rules

#	only rules.2 is actually used by PHI at this point
country_event = {
	id = rules.2
	hide_window = yes

	is_triggered_only = yes
	
	trigger = {
		is_at_war = no
		# NOR = {
		# 	crisis_happened_and_defeated = yes #Contingency, Extradimensionals or Prethoryn
		# 	AND = { #If the Khan is defeated, Crisis Beacon should be hidden until a new crisis happens
		# 		has_global_flag = great_khan_dead
		# 		has_crisis = no
		# 	}
		# 	AND = { #If the Gray Tempest is defeated, Crisis Beacon should be hidden until a new crisis happens
		# 		has_global_flag = graygoo_defeated
		# 		has_crisis = no
		# 	}
		# 	has_crisis_stage_4 = yes
		# }
		crisis_run_optimized = no
		NOT = { has_global_flag = phi_border_gore_allowed }
	}
	immediate = { 
		owner = { 
			country_event = { 
				id = rules.0
				days = 7 #gobbi fix anex vassal inoltre alleggerisce il carico nelle multiplayer
			} 
		} 
	}
}
country_event = {
	id = rules.0
	hide_window = yes

	is_triggered_only = yes
	
	immediate = {
		every_owned_planet = {
			limit = { num_pops >= 1 }
			solar_system = {
				set_star_flag = connected
			}
		}
		every_system_within_border = {
			limit = {
				NOT = { has_star_flag = connected }
			}
			if = {
				limit = {
					any_neighbor_system = {
						exists = owner
						owner = {
							OR = {
								AND = {
									is_subject = yes
									overlord = { is_same_value = root }
								}
								is_in_federation_with = root
								root = {
									is_subject = yes
									overlord = { is_same_value = prev }
								}
							}
						}
					}
				}
				set_star_flag = connected
			}
		}
		every_system_within_border = {
			limit = {
				NOT = { has_star_flag = connected }
				has_natural_wormhole = yes
			}
			if = {
				limit = {
					closest_system = {
						limit = {
							exists = owner
							owner = {
								OR = {
									AND = {
										is_subject = yes
										has_overlord = root
									}
									is_in_federation_with = root
									root = {
										is_subject = yes
										overlord = { is_same_value = prev }
									}
								}
							}
						}
						use_bypasses = yes
						min_steps = 1
						max_steps = 1
					}
				}
				
				set_star_flag = connected
			}
		}
		
		while = {
			limit = {
				any_system_within_border = {
					NOT = { has_star_flag = connected }
					root = {
						any_system_within_border = {
							has_hyperlane_to = prevprev
							has_star_flag = connected
						}
					}
				}
			}
			every_system_within_border = {
				if = {
					limit = {
						any_neighbor_system = {
							has_star_flag = connected
						}
					}
					set_star_flag = connected
				}
			}
		}
		every_system_within_border = {
			limit = {
				NOT = { has_star_flag = connected }
			}
			if = {
				limit = {
					closest_system = {
						limit = {
							has_star_flag = connected
						}
						use_bypasses = yes
						min_steps = 1
						max_steps = 1
					}
					
				}
				set_star_flag = connected
			}
		}
		#Repeat for gateways' and whormhole connected systems
		while = {
			limit = {
				any_system_within_border = {
					NOT = { has_star_flag = connected }
					root = {
						any_system_within_border = {
							has_hyperlane_to = prevprev
							has_star_flag = connected
						}
					}
				}
			}
			every_system_within_border = {
				if = {
					limit = {
						any_neighbor_system = {
							has_star_flag = connected
						}
					}
					set_star_flag = connected
				}
			}
		}
		
		#######################################
		#presa da phi non capisco cosa serve
		#taking care of the sealed entry system
		if = {
			limit = {
				any_system_within_border = {
					has_star_flag = sealed_entry_system
					has_star_flag = connected
				}
			}
			every_system_within_border = {
				if = {
					limit = {
						has_star_flag = sealed_system
					}
					set_star_flag = connected
				}
			}
		}
		
		#removes non-connected systems from the empire territory
		every_owned_fleet = {
			limit = {
				is_ship_class = shipclass_starbase
				solar_system = {
					NOT = { has_star_flag = connected }
				}
			}
			destroy_fleet = this
		}
		
		every_system_within_border = {
			remove_star_flag = connected
		}
	}
}
country_event = { #megacorp on megacorp
	id = rules.10
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		has_authority = auth_corporate
	}

	immediate = {
		every_owned_planet = {
			limit = { 
				has_branch_office = yes
				branch_office_owner = { is_criminal_syndicate = no }
		    }
			add_modifier = {
				modifier = phi_megacorp_competition
				days = 30
			}
		}
	}
}
country_event = { #autowar,nemesy #check
	id = rules.20
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		is_country_type = default
		is_a_total_war = yes
		is_at_war = no
		any_neighbor_country = {
			is_country_type = default
			is_homicidal = yes
			NOT = { has_truce = root }
		}
	}
	
	immediate = {
		every_neighbor_country = {
			limit = {
				is_country_type = default
				is_homicidal = yes
				NOT = { has_truce = root }
			}
			if = {
				limit = {
					any_system_within_border = {
						root = {
							any_system_within_border = {
								has_hyperlane_to = prevprev
							}
						}
					}
				}
				save_event_target_as = nemesi_target
			}
		}
		root = {
			declare_war = {
				target = event_target:nemesi_target
				name = "NAME_Only_1_can_exist"
				attacker_war_goal = "wg_phi_nemesi"
			}
		}
	}
}
country_event = { #test
	id = rules.99
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		is_at_war = yes
		is_country_type = default 
		
		any_war = {
			defender = { is_country_type = default }
			NOR = { 
				using_war_goal = { type = wg_humiliation owner = attacker } 
				using_war_goal = { type = wg_humiliation owner = defender }
				using_war_goal = { type = wg_independence owner = attacker }
			}
			any_attacker = { is_same_value = prevprev }
		}
	}
	
	immediate = {
	}
}
