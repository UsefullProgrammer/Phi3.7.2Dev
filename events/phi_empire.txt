namespace = phi_empire

#	phi_empire.0	monthly checked - gives victory screen to Galactic Emperor if conditions are met

country_event = {
	id = phi_empire.0
	hide_window = yes

	is_triggered_only = yes
	
	trigger = {
		is_galactic_emperor = yes
		is_at_war = no
		NOT = { has_global_flag = phi_emperor_win_disallowed }
		NOT = {
			any_country = {
				is_country_type = default
				is_galactic_community_member = no
			}
		}
		NOR = {
			has_global_flag = ongoing_prethoryn_invasion
			AND = {
				has_global_flag = extradimensional_invasion_happened
				NOT = { has_global_flag = extradimensional_invasion_defeated }
			}
			has_global_flag = ai_invasion_ongoing
			has_global_flag = gray_goo_crisis_active
			AND = {
				has_global_flag = great_khan_announcement
				NOT = { has_global_flag = great_khan_dead }
			}
		}
	}
	
	immediate = {
		win = yes
	}
}
country_event = {
	id = phi_empire.10
	title = "phi_empire.10name"
	desc = "phi_empire.10desc"
	hide_window = no
	picture = GFX_evt_satellite_in_orbit
	show_sound = event_ship_bridge
	location = event_target:found_pc_relic
	#prev
	#event_target:found_pc_relic

	is_triggered_only = yes
	option = {
		name = EXCELLENT
	}
}
country_event = {
	id = phi_empire.11
	title = "phi_empire.10name"
	desc = "phi_empire.10desc"
	hide_window = yes
	picture = GFX_evt_satellite_in_orbit
	show_sound = event_ship_bridge
	location = event_target:found_pc_relic
	#prev
	#event_target:found_pc_relic

	is_triggered_only = yes
	immediate = {
		random_system = {
			limit = { 
				has_planet_class = pc_relic 
				is_surveyed = {
					who = prev
					status = no
				}
			}
			weights = {
				base = 1
				modifier = { factor = 0.1 has_owner = yes }
				modifier = {
					factor = 100
					distance = {
						source = root.capital_scope
						max_distance <= 60
						type = euclidean
					}
				}
				modifier = {
					factor = 10
					distance = {
						source = root.capital_scope
						min_distance >= 60
						max_distance <= 120
						type = euclidean
					}
				}
				modifier = {
					factor = 0.5
					distance = {
						source = root.capital_scope
						min_distance  >= 120
						type = euclidean
					}
				}
			}
			random_system_planet = {
				limit = { is_planet_class = pc_relic }
				#set_surveyed = yes
				save_event_target_as = found_pc_relic
				#effect = {
				
				#}
			}
			
			root = { set_visited = prev }
		}
		#root = { 
		if = {
			limit = { exists = event_target:found_pc_relic }
			country_event = { id = phi_empire.10 }
		}
	}
}