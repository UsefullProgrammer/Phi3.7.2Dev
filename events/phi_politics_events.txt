namespace = phi_politics

# EXPLAINER:
#	all rebellion events are currently disabled
#	phi_politics.0		Rebel pops spawn armies and start the fighting on planet
#	phi_politics.1		Triggers country_event for the attacker upon victory on a rebellious planet
#	phi_politics.2		Triggers country_event for the defender upon victory on a rebellious planet
#	phi_politics.100	Gatekeeper event for ongoing rebellions
#	phi_politics.101	Rebels reinforcements arrive on occupied planet
#	phi_politics.200	Rebels won and forced a change in government
#
#	phi_politics.400	Gatekeeper event for a federation presidential run
#	phi_politics.3		Ensure that leaders start at level 3 if the appropriate tradition has been taken
#	phi_politics.4		Add monthly experience gain for leaders when edict is active
#	phi_politics.5		Removes centralization bonuses for empires no longer in a fed
#	phi_politics.6		Blood tribute edict launched by xenophobe fed leader
#	phi_politics.7		Planetary decision to release single-system vassals

planet_event = {
	id = phi_politics.0
	hide_window = yes

	is_triggered_only = yes
	
	trigger = {
		is_colony = yes
	}
	
	immediate = {
		set_planet_flag = phi_rebellion
		random_owned_pop = {
			limit = { has_job = rebel }
			save_event_target_as = leader_pop
		}
		
		create_country = {
			name = "Rebels"
			type = faction
			effect = {
				establish_communications_no_message = root.owner
				set_country_flag = phi_rebel_faction
			}
		}
		every_owned_pop = {
			limit = {
				has_job = rebel
			}
			planet = {
				while = {
					count = 2
					create_army = {
						owner = last_created_country
						species = event_target:leader_pop.species
						type = "phi_rebel_defense_army"
					}
				}
				if = {
					limit = { has_planet_flag = phi_rebels_well_armed }
					while = {
						count = 2
						create_army = {
							owner = last_created_country
							species = event_target:leader_pop.species
							type = "phi_rebel_defense_army"
						}
					}
				}
			}
		}
	}
}

# This = country, leader attacker
# From = country, planet owner
# FromFrom = planet
country_event = {
	id = phi_politics.1
	hide_window = yes

	is_triggered_only = yes
	
	trigger = {
		fromfrom = {
			has_planet_flag = phi_rebellion
		}
	}
	
	immediate = {
		if = {
			limit = { has_country_flag = phi_rebel_faction }
			fromfrom = {
				add_modifier = {
					modifier = phi_rebels_victory
					days = 360
				}
				owner = {
					if = {
						limit = {
							NOT = { has_country_flag = phi_rebellion_en_course }
						}
						country_event = { id = phi_politics.100 days = 10 }
					}
				}
			}
		}
		if = {
			limit = { is_same_value = fromfrom.owner }
			fromfrom = {
				remove_planet_flag = phi_rebellion
				if = { 
					limit = { has_modifier = phi_rebels_victory }
					remove_modifier = phi_rebels_victory
				}
				add_modifier = {
					modifier = phi_government_victory
					days = 360
				}
				while = {
					count = 5
					random_owned_pop = {
						limit = { has_job = rebel }
						kill_pop = yes
					}					
				}
				every_owned_pop = {
					limit = { has_job = rebel }
					unemploy_pop = yes
				}
			}
		}
	}
}

# Root = country, planet owner
# From = country, attack leader
# FromFrom = planet
country_event = {
	id = phi_politics.2
	hide_window = yes

	is_triggered_only = yes
	
	trigger = {
		fromfrom = {
			has_planet_flag = phi_rebellion
		}
	}
	
	immediate = {
		if = {
			limit = { has_country_flag = phi_rebel_faction }
			fromfrom = {
				add_modifier = {
					modifier = phi_rebels_victory
					days = 360
				}
			}
			#maybe fire another event to spread rebellion?
		}
		if = {
			limit = { is_same_value = fromfrom.owner }
			fromfrom = {
				if = {
					limit = { has_planet_flag = phi_rebellion }
					remove_planet_flag = phi_rebellion
				}
				if = {
					limit = { has_planet_flag = phi_rebels_well_armed }
					remove_planet_flag = phi_rebels_well_armed
				}
				if = { 
					limit = { has_modifier = phi_rebels_victory }
					remove_modifier = phi_rebels_victory
				}
				add_modifier = {
					modifier = phi_government_victory
					days = 360
				}
				while = {
					count = 5
					random_owned_pop = {
						limit = { has_job = rebel }
						kill_pop = yes
					}					
				}
				every_owned_pop = {
					limit = { has_job = rebel }
					unemploy_pop = yes
				}
			}
		}
	}
}

#Getekeeper event
country_event = {
	id = phi_politics.100

	hide_window = yes

	is_triggered_only = yes
	
	trigger = {
		any_owned_planet = {
			has_planet_flag = phi_rebellion
		}
	}
	
	immediate = {
		if = {
			limit = { NOT = { has_country_flag = phi_rebellion_en_course } }
			set_country_flag = phi_rebellion_en_course
		}
		
		every_owned_planet = {
			if = {
				limit = {
					has_planet_flag = phi_rebellion
					has_ground_combat = no
					controller = { NOT = { has_country_flag = phi_rebel_faction } }
				}
				remove_planet_flag = phi_rebellion
			}
		}
		
		capital_scope = { 
			if = {
				limit = {
					has_planet_flag = phi_rebellion
					controller = { has_country_flag = phi_rebel_faction }
				}
				owner = {
					country_event = { id = phi_politics.200 }
					#Rebels won and force a change in government
					break = yes
				}
			}
		}
		
		random_list = {
			1 = {
				#nothing happens
			}
			100 = {
				country_event = { id = phi_politics.101 }
				#Rebels reinforce on a occupied planet
			}
			100 = {
				country_event = { id = phi_politics.102 }
				#Rebels propagate ideology to un-rebelled planet
			}
			100 = {
				country_event = { id = phi_politics.103 }
				#Rebellion extends
			}
			100 = {
				country_event = { id = phi_politics.104 }
				#Rebels smuggle arms to other comrades
			}
		}
		
		#Calls back the gatekeeper to continue the chain of events
		country_event = { id = phi_politics.100 days = 30 random 60 }
	}
}


#Rebels reinforce on a occupied planet
country_event = {
	id = phi_politics.101
	# title = "reinforcements"
	hide_window = yes

	is_triggered_only = yes
	
	immediate = {
		random_owned_planet = {
			limit = {
				has_planet_flag = phi_rebellion
				controller = { has_country_flag = phi_rebel_faction }
				has_ground_combat = no
				has_orbital_bombardment = no
			}
			random_owned_pop = {
				save_event_target_as = leader_pop
			}
			while = {
				count = 10
				create_army = {
					owner = controller
					species = event_target:leader_pop.species
					type = "phi_rebel_defense_army"
				}
			}
		}
	}
}

#Rebels propagate ideology
country_event = {
	id = phi_politics.102
	# title = "propaganda"
	hide_window = yes

	is_triggered_only = yes
	
	immediate = {
		random_owned_planet = {
			limit = { NOT = { has_planet_flag = phi_rebellion } }
			while = {
				count = 5
				random_owned_pop = {
					limit = {
						NOR = {
							has_job = rebel
							has_modifier = phi_rebel_propaganda
						}
					}
					add_modifier = {
						modifier = phi_rebel_propaganda
						days = 720
					}
				}
			}
			if = {
				limit = { num_pops > 20 }
				while = {
					count = 5
					random_owned_pop = {
						limit = {
							NOR = {
								has_job = rebel
								has_modifier = phi_rebel_propaganda
							}
						}
						add_modifier = {
							modifier = phi_rebel_propaganda
							days = 720
						}
					}
				}
			}
		}
	}
}

#Rebellion extends
country_event = {
	id = phi_politics.103
	# title = "new revolt"
	hide_window = yes

	is_triggered_only = yes
	
	immediate = {
		random_owned_planet = {
			limit = {
				any_owned_pop = { has_job = rebel }
				NOT = { has_planet_flag = phi_rebellion }
				has_ground_combat = no
				has_orbital_bombardment = no
			}
			planet_event = { id = phi_politics.0 }
		}
	}
}

#Rebels smuggle arms to other comrades
country_event = {
	id = phi_politics.104
	# title = "arms"
	hide_window = yes

	is_triggered_only = yes
	
	immediate = {
		random_owned_planet = {
			limit = {
				any_owned_pop = { has_job = rebel }
				NOT = { has_planet_flag = phi_rebellion }
				NOT = { has_planet_flag = phi_rebels_well_armed }
				has_ground_combat = no
				has_orbital_bombardment = no
			}
			set_planet_flag = phi_rebels_well_armed
		}
	}
}

# Rebels won and force a change in government
country_event = {
	id = phi_politics.200
	hide_window = yes

	is_triggered_only = yes
	
	immediate = {
		if = {
			limit = { has_country_flag = phi_rebellion_en_course }
			remove_country_flag = phi_rebellion_en_course
		}
		random_owned_planet = {
			limit = {
				any_owned_pop = { has_job = rebel }
			}
			random_owned_pop = {
				limit = { has_job = rebel }
				switch = {
					trigger = pop_has_ethic
					ethic_xenophile = { root = { shift_ethic = "ethic_fanatic_xenophile" } }
					ethic_xenophobe = { root = { shift_ethic = "ethic_fanatic_xenophobe" } }
					ethic_egalitarian = { root = { shift_ethic = "ethic_fanatic_egalitarian" } }
					ethic_authoritarian = { root = { shift_ethic = "ethic_fanatic_authoritarian" } }
					ethic_pacifist = { root = { shift_ethic = "ethic_fanatic_pacifist" } }
					ethic_militarist = { root = { shift_ethic = "ethic_fanatic_militarist" } }
					ethic_spiritualist = { root = { shift_ethic = "ethic_fanatic_spiritualist" } }
					ethic_materialist = { root = { shift_ethic = "ethic_fanatic_materialist" } }
				}
			}
		}
		change_government = random
		
		every_owned_planet = {
			limit = {
				controller = {
					has_country_flag = phi_rebel_faction
				}
			}
			create_army = {
				owner = root
				species = root.species
				type = "phi_rebel_defense_army"
			}
			every_ground_combat_defender = {
				remove_army = yes
			}
		}
		
		every_owned_planet = {
			limit = { has_planet_flag = phi_rebellion }
			remove_planet_flag = phi_rebellion
		}
		
		every_owned_planet = {
			limit = { has_planet_flag = phi_rebels_well_armed }
			remove_planet_flag = phi_rebels_well_armed
		}
		
		every_owned_planet = {
			limit = { is_colony = yes }
			if = {
				limit = { has_modifier = phi_rebels_victory }
				remove_modifier = phi_rebels_victory
			}
			add_modifier = {
				modifier = phi_government_victory
				days = 1800
			}
			every_owned_pop = {
				limit = { has_modifier = phi_rebel_propaganda }
				remove_modifier = phi_rebel_propaganda
			}
		}
	}
}

#from = leader spawned
#root = country
country_event = {
	id = phi_politics.3
	hide_window = yes

	is_triggered_only = yes
	
	immediate = {
		from = {
			if = {
				limit = {
					leader_class = admiral
					root = { has_tradition = tr_supremacy_war_games }
				}
				set_skill = 3
				break = yes
			}
			if = {
				limit = {
					leader_class = general
					root = { has_tradition = tr_supremacy_war_games }
				}
				set_skill = 3
				break = yes
			}
			if = {
				limit = {
					leader_class = governor
					root = { has_tradition = tr_domination_colonial_viceroys }
				}
				set_skill = 3
				break = yes
			}
			if = {
				limit = {
					leader_class = scientist
					root = { has_tradition = tr_discovery_polytechnic_education }
				}
				set_skill = 3
				break = yes
			}
			if = {
				limit = {
					leader_class = ruler
					root = { has_tradition = tr_domination_colonial_viceroys }
				}
				set_skill = 3
				break = yes
			}
		}
	}
}

#phi_education_campaign on_monthly pulse that adds xp to every leader an empire owns
country_event = {
	id = phi_politics.4
	hide_window = yes

	is_triggered_only = yes
	
	trigger = {
		has_country_flag = phi_education_campaign
	}
	
	immediate = {
		every_owned_leader = {
			add_experience = 5
		}
	}
}

country_event = {
	id = phi_politics.400
	hide_window = yes

	is_triggered_only = yes
	
	trigger = {
		has_federation = yes
	}
	
	immediate = {
		federation = {
			every_member = {
				limit = { is_ai = no }
				country_event = { id = phi_politics.401 }
			}
		}
		
		country_event = { id = phi_politics.402 days = 30 }
	}
}

country_event = {
	id = phi_politics.401
	title = phi_politics.401.name
	desc = phi_politics.401.desc
	picture = GFX_evt_galactic_senate
	show_sound = event_celebration
	location = root

	is_triggered_only = yes
	
	option = {
		name = phi_politics.401.a
		hidden_effect = {
			set_country_flag = voted_yes
		}
		
		ai_chance = {
			factor = 10
		}
	}
	
	option = {
		name = phi_politics.401.b
		hidden_effect = {
			set_country_flag = voted_no
		}
		
		ai_chance = {
			factor = 0
		}
	}
}

country_event = {
	id = phi_politics.402
	hide_window = yes

	is_triggered_only = yes
	
	immediate = {
		if = {
			limit = {
				NOT = {
					any_country = {
						is_in_federation_with = root
						has_country_flag = voted_no
					}
				}
			}
			set_federation_leader = root
		}
		every_country = {
			limit = {
				is_in_federation_with = root
			}
			remove_country_flag = voted_yes
			remove_country_flag = voted_no
		}	
	}
}

#phi_federation_centralization on_monthly pulse that removes centralization bonuses for empires no longer in a fed
country_event = {
	id = phi_politics.5
	hide_window = yes

	is_triggered_only = yes
	
	trigger = {
		has_federation = no
		OR = {
			has_modifier = phi_centralization_1
			has_modifier = phi_centralization_2
			has_modifier = phi_centralization_3
			has_modifier = phi_centralization_4
			has_modifier = phi_centralization_5
		}
	}
	
	immediate = {
		remove_modifier = phi_centralization_1
		remove_modifier = phi_centralization_2
		remove_modifier = phi_centralization_3
		remove_modifier = phi_centralization_4
		remove_modifier = phi_centralization_5
	}
}

#blood tribute edict launched by xenophobe fed leader
country_event = {
	id = phi_politics.6
	title = phi_politics.6.name
	desc = phi_politics.6.desc
	picture = GFX_evt_surrender
	show_sound = event_air_raid_siren
	location = root

	is_triggered_only = yes
	
	option = {
		name = OK
		hidden_effect = {
			while = {
				count = 5
				random_owned_pop = {
					random_country = {
						limit = {
							is_in_federation_with = root
							is_federation_leader = yes
						}
						random_owned_planet = {
							limit = { is_capital = yes }
							create_pop = {
								species = prevprev
							}
						}
					}
					kill_pop = yes
				}
			}
		}
		ai_chance = {
			factor = 100
		}
	}
}

#Planetary decision to release single-system vassals
planet_event = {
	id = phi_politics.7
	hide_window = yes

	is_triggered_only = yes
	
	trigger = {
		
	}
	
	immediate = {
		owner = {
			save_event_target_as = releasing_empire
			owner_species = { save_event_target_as = releasing_species }
		}

		create_country = {
			name = random
			species = event_target:releasing_species
			origin = origin_default
			flag = random
			
			effect = {
				copy_ethos_and_authority = event_target:releasing_empire
				save_event_target_as = client_state
				establish_communications_no_message = event_target:releasing_empire
				event_target:releasing_empire = {
					establish_communications_no_message = prev
				}
				root = {
					set_owner = event_target:client_state
					solar_system = {
						starbase = {
							set_owner = event_target:client_state
						}
					}
				}
				copy_techs_from = {
					target = event_target:releasing_empire
					except = {
						# Horizon Signal
						tech_akx_worm_1
						tech_akx_worm_2
						tech_akx_worm_3
					}
				}
				
				add_resource = {
					food = 100
					energy = 100
					minerals = 100
					consumer_goods = 100
					influence = 25
				}
				
				create_leader = {
					class = ruler
					species = owner_main_species
					name = random
					skill = 2
					traits = {}
				}
				
				assign_leader = last_created_leader
				ruler = {
					add_random_leader_trait = yes
				}
				set_subject_of = {
					who = event_target:releasing_empire
					subject_type = vassal
				}
			}
		}
	}
}