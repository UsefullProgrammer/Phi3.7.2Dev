namespace = phi_notification
# Check if player can discover L-Gate insight via Minor Artifact
@message_alert_display_duration_days_tier_2 = 15
country_event = {
	id = phi_notification.0
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		is_ai = no
	}
	immediate = {
		country_event = { 
			id = phi_notification.1  #notification artifact_lgate_insight_cooldown
			days = 1
		} 
		country_event = { 
			id = phi_notification.2  #notification artifact_precursor_insight_cooldown
			days = 2
		} 
		country_event = { 
			id = phi_notification.3  #notification survive_avaible_target
			days = 3
		} 
		country_event = { 
			id = phi_notification.10  #notification survive_avaible_target
			days = 3
		} 
		

	}
}
country_event = {
	id = phi_notification.1
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		is_ai = no
		has_resource = { type = minor_artifacts amount >= 1000 }
		has_country_flag = encountered_first_lgate
		NOT = { has_country_flag = completed_lcluster_chain }
		NOT = { has_global_flag = l_cluster_opened }
		has_distar = yes
	}

	immediate = {
		if = {
			limit = {
				NOT = { has_modifier = "artifact_lgate_insight_cooldown" } # Off Cooldown
				NOT = { has_country_flag = minor_artifact_lgate_notified_flag }
			}
			create_message = {
				type = MESSAGE_TYPE_RELICS_MINOR_ARTIFACT_LGATE_AVAILABLE
				localization = MINOR_ARTIFACT_LGATE_ALERT_MESSAGE
				days = @message_alert_display_duration_days_tier_2
			
				#onclick = relics
			}
			set_country_flag = minor_artifact_lgate_notified_flag
		}
		else_if = {
			limit = { has_country_flag = minor_artifact_lgate_notified_flag }
			remove_country_flag = minor_artifact_lgate_notified_flag
		}
	}
}

# Check if player can discover Precursor Insight via Minor Artifact
# @minor_artifact_precursor_insight_notified_flag = notified_minor_artifact_precursor_insight
country_event = {
	id = phi_notification.2
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		is_ai = no
		has_resource = { type = minor_artifacts amount >= 500 }
		Has_precursor_chain = yes
		# OR = {
		# 	has_country_flag = minor_artifact_precursor_insight_notified_flag
		# }
	}

	immediate = {
		if = {
			limit = {
				NOT = { has_modifier = "artifact_precursor_insight_cooldown" } # Off Cooldown
				NOT = { has_country_flag = minor_artifact_precursor_insight_notified_flag }
			}
			create_message = {
				type = MESSAGE_TYPE_RELICS_MINOR_ARTIFACT_PRECURSOR_AVAILABLE
				localization = MINOR_ARTIFACT_PRECURSOR_ALERT_MESSAGE
				days = @message_alert_display_duration_days_tier_2
			
				target = event_target:$LEADER$
			}
			set_country_flag = minor_artifact_precursor_insight_notified_flag
		
		}
		else_if = {
			limit = { has_country_flag = minor_artifact_precursor_insight_notified_flag }
			remove_country_flag = minor_artifact_precursor_insight_notified_flag
		}


	}
}
country_event = {
	id = phi_notification.3
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		is_ai = no
		any_country = {
			has_communications = root
			any_war = {
				using_war_goal = { type = wg_phi_survive owner = prev }
				
				defender_war_exhaustion < 0.5
			}
		}
	}

	immediate = {
        random_country = {
			limit = {
				has_communications = root
				any_war = {
					using_war_goal = { type = wg_phi_survive owner = prev }
					any_defender = { 
						NOT = { is_same_value = prevprevprev } 
						is_same_value = prevprev
						is_war_leader = yes
					}
					any_attacker = {
						NOT = { is_same_value = prevprevprev }
					}
					defender_war_exhaustion < 0.5
				}
			}
            save_event_target_as = survive_avaible_target
		}
		if = {
			limit = {
				exists = event_target:survive_avaible_target
				NOT = { has_country_flag = phi_empire_in_survive_flag }
				#NOT = { has_country_flag = phi_empire_in_survive_flag } # No Notified Flag
			}
			create_message = {
				type = MESSAGE_TYPE_EDICTS_PHI_EMPIRE_IN_SURVIVE_AVAIBLE
				localization = PHI_EMPIRE_IN_SURVIVE_AVAIBLE_ALERT_MESSAGE
				days = @message_alert_display_duration_days_tier_2
			
				target = event_target:survive_avaible_target
				variable = {
					type = name
					localization = EMPIRE
					scope = event_target:survive_avaible_target
				}
			}
			set_country_flag = phi_empire_in_survive_flag
		
		}else_if = {
			limit = { has_country_flag = phi_empire_in_survive_flag }
			remove_country_flag = phi_empire_in_survive_flag
		}
	}
}
#notified empire size over
country_event = {
	id = phi_notification.10
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		is_ai = no
		empire_sprawl_over_cap >= 24
	}

	immediate = {
		if = {
			limit = {
				NOT = { has_country_flag = phi_empire_size_over_flag }
			}
			if = {
				limit = {
					has_resource = { type = influence amount >= 1000 }
					NOT = { has_edict = expansion_planer }
					
				}
				create_message = {
					type = MESSAGE_TYPE_phi_empire_size_over
					localization = phi_empire_size_over_expansion_planer_MESSAGE
					days = @message_alert_display_duration_days_tier_2
				}
			}
			else_if = {
				limit = {
					NAND = {
						has_edict = expansion_planer
						has_policy_flag = economic_policy_adaptability
					}
					
				}
				create_message = {
					type = MESSAGE_TYPE_phi_empire_size_over
					localization = phi_empire_size_over_tip_MESSAGE
					days = @message_alert_display_duration_days_tier_2
				}
			}
			else = {
				create_message = {
					type = MESSAGE_TYPE_phi_empire_size_over
					localization = phi_empire_size_over_MESSAGE
					days = @message_alert_display_duration_days_tier_2
				}
				
			}
			set_country_flag = phi_empire_size_over_flag
		}
		else_if = {
			limit = { has_country_flag = phi_empire_size_over_flag }
			remove_country_flag = phi_empire_size_over_flag
		}
	}
}